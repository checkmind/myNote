<style lang="less">
  .userinfo {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .userinfo-avatar {
    width: 80rpx;
    height: 80rpx;
    border-radius: 50%;
  }

  .userinfo-nickname {
    color: #aaa;
  }
</style>
<template>
  <view class="loading"></view>
  <view class="container"  @touchmove="moveFn" @touchstart="startFn" @touchend="endFn">
    <view style="top:{{top}}px;position:relative;" class="container-son">
    <repeat for="{{list}}" key="index" index="index" item="item">
        <view>{{ item }}<text>{{index}}</text></view>
    </repeat>
    </view>
  </view>
</template><!-- 
等等，好像刚刚原生滚动实现的效果和滚动容器实现的稍有不同，你可以翻回去看看，原生滚动在手指离开屏幕之后，整体的位置瞬间重置到底部，但是滚动容器实现的，节点直接填充到空白位置。这是为什么呢？  
其实这跟上面讲的原生滚动的其中一个缺点有关，原生滚动 `scrollTop`, 虽然微信官方提供了设置全局 `scrollTop` 的方法，但还存在几个问题。  
文档里就这四行示例代码  
```javascript
wx.pageScrollTo({
  scrollTop: 0,
  duration: 300
})
```  
- 滚动的过程默认动画，并且不能更改（这个是多次设置了duration的值之后发现的）  
- 基础库 1.4.0 开始支持
- `scrollTop` 的单位有问题
在滚动容器实现中，手指离开屏幕之后会计算一次 `scrollTop`, 让节点停在正确的位置，而在原生滚动实现中，主要还是因为默认的动画实在太难受。这 -->
<script>
import wepy from 'wepy'
import 'wepy-async-function'
// <view>{{ text }}</view>
//       <view @tap="gotoTop">回到顶部</view>
  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '上拉加载',
      enablePullDownRefresh: true
    }
    components = {

    }


    data = {
      getData: '',
      top: 0,
      lastTop: 0,
      canDrag: false,
      text: '',
      maxTop: 50,
      list: [ "数据",
              "数据",
              "数据",
              "数据",
              "数据",
              "数据",
              "数据",
              "数据",
              "数据",
              "数据",
              "数据",
              "数据",
              "数据",]
    }

    computed = {
      
    }

    methods = {
      moveFn(ev) {
        let nowY = ev.changedTouches[0].clientY
        nowY = nowY-this.lastTop
        console.log(nowY)
        if(nowY > 0 )
          this.canDrag = false
        console.log(this.canDrag, nowY)
        if( nowY<=0 && this.canDrag ) {
          this.top = nowY
        }
        if( -this.top>= this.maxTop  )
          this.top = -this.maxTop
      },
      startFn(ev) {
        this.lastTop = ev.changedTouches[0].clientY 
      },
      endFn() {
        if(this.top <= -this.maxTop) {
          this.text = "去请求数据了"
          setTimeout(()=>{
            this.text = "请求回来了"
            this.canDrag = false
            this.list.push(...["数据","数据","数据"])
            
            this.top = 0;
            this.$apply()
            return
          },1000)
        }
      },
      gotoTop() {
        wepy.pageScrollTo({
          scrollTop: 0
        })
      }
    }

    events = {
      
    }

    onLoad() {

    }

    onReachBottom() {
     this.canDrag = true
    }
  }
</script>
<style>
  view {
    display:block;
    width:100%;
    height:50px;
    line-height:50px;
    text-align:center;
    border-bottom:1px solid red;
  }
  .container-son {
    z-index:2;
    position:relative;
    background:white;
    height:auto;
  }
  .loading {
    width:40px;
    height:40px;
    border:1px solid black;
    animation:loadings 1s linear infinite both;
    position:fixed;
    bottom:0;
    left:50%;
    margin-left:-20px;
    z-index:1;
    border-radius:50%;
    border-bottom:1px solid red;
  }
  @keyframes loadings
  {
  from { transform:rotate(0deg); }
  to {transform:rotate(360deg);}
  }
</style>
